---
title: "Quarto Website Demo"
format: gfm
editor: visual
---

## What is Quarto?

Quarto is a publishing system that allows you to weave together content and executable code into a finished document using R, Python, Julia, and ObservableJS, with plans to add more languages. You can thing of Quarto as an extension of R Markdown, but with more features and additional languages. R Markdown is still under active development and is not going anywhere, however many in the data science realm are switching to Quarto instead.

You may notice if you open this lesson in in R Studio, while it is a .qmd document it looks and functions nearly identical to a .Rmd document! Therefore your knowledge of R Markdown is easily transferable to Quarto.

![Artwork from "Hello, Quarto" keynote by Julia Lowndes and Mine Ã‡etinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.](www/quarto.png){fig-align="center" width="446"}

::: {.alert .alert-info}
Quarto operates as a stand-alone software, however with RStudio v2022.07.1 + Quarto is included, therefore there is no need to separately install Quarto if you have the latest version of RStudio.
:::

## Why build a website in Quarto?

There are plenty of R-based options to create a personal website such as `blogdown` and `distill`, however I've found creating a website in Quarto is more simple/straightforward in terms of file structure and publishing. This is not to say you shouldn't consider the other options! I made [my personal website](https://caitlinmothes.com) in blogdown for example (code can be found [here](https://github.com/ccmothes/personalWebsite)), but this was before Quarto existed and I have since found websites in Quarto to be slightly easier to teach. So that is what we will work through today!

## Getting Started

The structure of Quarto websites is actually nearly identical to that of R Projects (and they actually create an .Rproj file when you create the website). That being said, we want to link this to a GitHub repository so let's **create that repo first.**

In your personal GitHub account create a new repository and call it something like "website-demo". Keep all the other defaults as-is. Then copy the HTTPS link (or SSH if you set up an SSH key).

Next, go to File -\> New Project -\>

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed). ðŸ˜ƒ
